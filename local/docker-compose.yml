## -- DO NOT EDIT THIS FILE --
##
## Edit '.env' for configuration.
##
## If '.env' does not exist, copy 'env-example' to '.env'
##   $ cp env-example .env
##


version: '3'


################################################################################
# SERVICES
################################################################################
services:

  # ------------------------------------------------------------
  # Web Server
  # ------------------------------------------------------------
  web:
    container_name: ${PROJECT_NAME}_${WEB_SERVER_NAME}
    image: ${WEB_SERVER}

    environment:

      ##
      ## UserID and GroupID
      ##
      APACHE_USER_UID: ${NEW_UID}
      APACHE_USER_GID: ${NEW_GID}

    ports:
      # ---- Format: ----
      # [HOST-ADDR : ] HOST-PORT : DOCKER-PORT
      - "${LOCAL_LISTEN_ADDR}${WEB_SERVER_PORT}:80"
      - "${LOCAL_LISTEN_ADDR}${WEB_SERVER_PORT_SSL}:443"

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount web folder
      - ${HOST_PATH_WEB_WWW}:/var/www/html/

      # Website config
      - ${DEVBOX_PATH}/config/${WEB_SERVER_NAME}/sites-enabled/:/etc/apache2/sites-enabled/

    links:
      - redis:redis-server
      - mysql:mysql-server
      - mailhog:mailhog-server


  # ------------------------------------------------------------
  # MySQL Database
  # ------------------------------------------------------------
  mysql:
    container_name: ${PROJECT_NAME}_${MYSQL_SERVER_NAME}
    image: ${MYSQL_SERVER}

    environment:
      ##
      ## Adjust Root password
      ##
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

    ports:
      # [local-machine:]local-port:docker-port
      - "${LOCAL_LISTEN_ADDR}${MYSQL_SERVER_PORT}:3306"

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY
      - ${MYSQL_BACKUP_FOLDER}:/backup/

  # ------------------------------------------------------------
  # Redis
  # ------------------------------------------------------------
  redis:
    container_name: ${PROJECT_NAME}_${REDIS_SERVER_NAME}
    image: ${REDIS_SERVER}

    ports:
      # [local-machine:]local-port:docker-port
      - "${LOCAL_LISTEN_ADDR}${REDIS_SERVER_PORT}:6379"

  # ------------------------------------------------------------
  # phpmyadmin
  # ------------------------------------------------------------
  phpmyadmin:
    container_name: ${PROJECT_NAME}_${PHPMYADMIN_SERVICE_NAME}
    image: ${PHPMYADMIN_SERVICE}
    environment:
      PMA_HOST: mysql-server
    links:
      - mysql:mysql-server
    ports:
      # [local-machine:]local-port:docker-port
      - "${LOCAL_LISTEN_ADDR}${PHPMYADMIN_SERVICE_PORT}:80"

  # ------------------------------------------------------------
  # mailhog
  # ------------------------------------------------------------
  mailhog:
    container_name: ${PROJECT_NAME}_${MAILHOG_SERVICE_NAME}
    image: ${MAILHOG_SERVICE}
    ports:
      # [local-machine:]local-port:docker-port
      - "${LOCAL_LISTEN_ADDR}${MAILHOG_SERVICE_PORT}:1025"
      - "${LOCAL_LISTEN_ADDR}${MAILHOG_SERVICE_PORT_WEB}:8025"

  # ------------------------------------------------------------
  # npm
  # ------------------------------------------------------------
  npm:
    container_name: ${PROJECT_NAME}_${NODE_SERVICE_NAME}
    image: ${NODE_SERVICE}

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY
      - ${HOST_PATH_NPM_DATADIR}:/data/
    working_dir: /data
    entrypoint: ['npm', '--no-bin-link']

  # ------------------------------------------------------------
  # grunt
  # ------------------------------------------------------------
  grunt:
    container_name: ${PROJECT_NAME}_${GRUNT_SERVICE_NAME}
    image: ${GRUNT_SERVICE}

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY
      - ${HOST_PATH_GRUNT_DATADIR}:/data/
    working_dir: /data
    entrypoint: ['grunt']
    links:
        - redis:redis-server
        - mysql:mysql-server


################################################################################
# NETWORK
################################################################################
#networks:
#  app_net:
#    driver: bridge
#    driver_opts:
#      com.docker.network.enable_ipv6: "false"
#    ipam:
#      driver: default
#      config:
#        - subnet: 172.16.238.0/24
#          gateway: 172.16.238.1